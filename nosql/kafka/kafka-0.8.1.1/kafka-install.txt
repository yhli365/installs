Kafka
@version kafka_2.9.2-0.8.1.1.tgz

--)install-------------------------------------------------
#)安装
$ tar -xzf kafka_2.9.2-0.8.1.1.tgz -C /disk/cdh5/app
$ ln -s /disk/cdh5/app/kafka_2.9.2-0.8.1.1 ~/cdh/kafka

--)Test(单Broker测试)-----------------------------------------
$ cd ~/cdh/kafka

#)启动服务
$ bin/zookeeper-server-start.sh config/zookeeper.properties
$ bin/kafka-server-start.sh config/server.properties

#)新建一个话题Topic
Topic的名字叫”test”,只有一个分区和一个备份。
$ bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test

查看存在的Topic列表:
$ bin/kafka-topics.sh --list --zookeeper localhost:2181
除了手工创建Topic，你也可以配置你的broker当发布一个不存在的topic时自动创建topic。

#)发送消息
Kafka提供了一个命令行的工具，可以从输入文件或者命令行中读取消息并发送给Kafka集群。每一行是一条消息。
$ bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test
This is a message
This is another message

#)消费消息
$ bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic test --from-beginning

--)Test(多Broker测试)-----------------------------------------
#)首先为每个broker创建一个配置文件
$ cp config/server.properties config/server-1.properties
$ cp config/server.properties config/server-2.properties
$ vi config/server-1.properties
broker.id=1
port=9093
log.dir=/tmp/kafka-logs-1
$ vi config/server-2.properties
broker.id=2
port=9094
log.dir=/tmp/kafka-logs-2

#)启动这两个broker
Zookeeper还在，上面用的broker还活着。
$ bin/kafka-server-start.sh config/server-1.properties &
$ bin/kafka-server-start.sh config/server-2.properties &

#)创建一个topic试试，把备份设置为3
$ bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 1 --topic my-replicated-topic

#)运行"describe topics"命令瞧瞧
$ bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic my-replicated-topic
$ bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic test

#)发布个消息
$ bin/kafka-console-producer.sh --broker-list localhost:9092 --topic my-replicated-topic
my test message 1
my test message 2
^C

#)消费它
$ bin/kafka-console-consumer.sh --zookeeper localhost:2181 --from-beginning --topic my-replicated-topic

#)测试一下容错. 干掉leader,也就是Broker 1:
$ ps -ef | grep server-1.properties
$ kill -9 7564

Leader被切换到一个follower上节, 点1不会被列在isr中了，因为它死了:
$ bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic my-replicated-topic

但是，消息没丢啊，不信你试试:
$ bin/kafka-console-consumer.sh --zookeeper localhost:2181 --from-beginning --topic my-replicated-topic

